#####################
# "Stand alone" version of the music player for writing songs.
# The code is identical, except for the main loop.

:alias music-delay vE

: main
  :unpack 0 knee-deep-in-trouble
  select-song
  loop
    play-music
    delay := music-delay
    loop
      v0 := delay
      if v0 != 0 then
    again
  again

#####################
# Musical accompaniment

:const c-note    0
:const c-repeat  1
:const c-da-capo 2
:const c-stop    3

# Convenience macros

:macro note ADDRESS DURATION {
  :byte { ADDRESS >> 8 }
  :byte { ADDRESS }
  :byte c-note
  :byte { DURATION }
}

:macro rest DURATION {
  :byte { --- >> 8 }
  :byte { --- }
  :byte c-note
  :byte { DURATION }
}

:macro repeat TIMES LABEL {
  :byte { TIMES - 1 }
  :byte { TIMES - 1 }
  :byte c-repeat
  :byte { ( ( HERE - LABEL ) / 4 ) + 1 }
}

:macro da-capo {
  :byte 0
  :byte 0
  :byte c-da-capo
  :byte 0
}

:macro stop {
  :byte 0
  :byte 0
  :byte c-stop
  :byte 0
}

# Available samples

: A$1 0xFF 0xFF 0xFF 0xFF 0xE0 0x00 0x00 0x00 0x07 0xFF 0xFF 0xFF 0xFE 0x00 0x00 0x00
: C-2 0xFF 0xFF 0xFF 0xFE 0x00 0x00 0x00 0x03 0xFF 0xFF 0xFF 0xF0 0x00 0x00 0x00 0x1F
: C$2 0xFF 0xFF 0xFF 0xF8 0x00 0x00 0x00 0x3F 0xFF 0xFF 0xFE 0x00 0x00 0x00 0x0F 0xFF
: D-2 0xFF 0xFF 0xFF 0xF0 0x00 0x00 0x01 0xFF 0xFF 0xFF 0xC0 0x00 0x00 0x07 0xFF 0xFF
: D$2 0xFF 0xFF 0xFF 0xC0 0x00 0x00 0x0F 0xFF 0xFF 0xFC 0x00 0x00 0x01 0xFF 0xFF 0xFF
: E-2 0xFF 0xFF 0xFF 0x80 0x00 0x00 0x7F 0xFF 0xFF 0x80 0x00 0x00 0x3F 0xFF 0xFF 0xC0
: F-2 0xFF 0xFF 0xFE 0x00 0x00 0x03 0xFF 0xFF 0xF8 0x00 0x00 0x0F 0xFF 0xFF 0xE0 0x00
: F$2 0xFF 0xFF 0xFC 0x00 0x00 0x0F 0xFF 0xFF 0x80 0x00 0x01 0xFF 0xFF 0xF8 0x00 0x00
: G-2 0xFF 0xFF 0xF8 0x00 0x00 0x7F 0xFF 0xFC 0x00 0x00 0x3F 0xFF 0xFE 0x00 0x00 0x1F
: A$2 0xFF 0xFF 0xC0 0x00 0x1F 0xFF 0xF0 0x00 0x07 0xFF 0xFC 0x00 0x00 0xFF 0xFF 0x80
: C-3 0xFF 0xFF 0x00 0x01 0xFF 0xFC 0x00 0x03 0xFF 0xF8 0x00 0x0F 0xFF 0xF0 0x00 0x1F
: G-5 0xE3 0x18 0xC6 0x39 0xCE 0x73 0x8C 0x63 0x18 0xC7 0x39 0xCE 0x71 0x8C 0x63 0x1C
: F-5 0xE3 0x8E 0x39 0xC7 0x1C 0x63 0x8E 0x38 0xC7 0x1C 0x73 0x8E 0x38 0xE7 0x1C 0x71
: E-5 0xF1 0xC7 0x1C 0x71 0xC7 0x1C 0x71 0xC7 0x1C 0x71 0xC7 0x8E 0x38 0xE3 0x8E 0x38
: D-5 0xF1 0xE3 0xC7 0x0E 0x1C 0x78 0xF1 0xC3 0x87 0x1E 0x3C 0x70 0xE1 0xC3 0x8F 0x1E
: C-5 0xF0 0xF0 0xF1 0xE1 0xE1 0xE3 0xC3 0xC3 0xC7 0x87 0x87 0x0F 0x0F 0x0E 0x1E 0x1E
: B-4 0xF8 0x78 0x78 0x78 0x78 0x78 0x78 0x78 0x78 0x78 0x7C 0x3C 0x3C 0x3C 0x3C 0x3C # 494hz
: A$4 0xF8 0x78 0x3C 0x3E 0x1E 0x1F 0x0F 0x07 0x87 0x83 0xC3 0xE1 0xE0 0xF0 0xF0 0x78 # 466hz
: G$4 0xF8 0x3E 0x0F 0x87 0xC1 0xF0 0x7C 0x3E 0x0F 0x83 0xC1 0xF0 0x7C 0x1E 0x0F 0x83 # 415hz
: D$4 0xFE 0x07 0xF0 0x3F 0x81 0xFC 0x0F 0xC0 0x7E 0x03 0xF0 0x1F 0x81 0xFC 0x0F 0xE0 # 311hz
: D-4 0xFE 0x03 0xF8 0x0F 0xE0 0x7F 0x01 0xFC 0x07 0xF0 0x3F 0x80 0xFE 0x03 0xF8 0x1F # 293hz
: C$4 0xFF 0x01 0xFC 0x07 0xF8 0x0F 0xE0 0x3F 0x80 0x7F 0x01 0xFC 0x03 0xF8 0x0F 0xE0 # 277hz
: C-4 0xFF 0x00 0xFE 0x01 0xFE 0x03 0xFC 0x03 0xF8 0x07 0xF0 0x0F 0xF0 0x1F 0xE0 0x1F # 262hz
: F-4 0xFC 0x0F 0xC1 0xF8 0x1F 0x83 0xF0 0x3F 0x07 0xE0 0x7C 0x0F 0xC0 0xF8 0x1F 0x81

: --- 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 # silence

: click 0x02 0xCD 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

# Songs

: knee-deep-in-trouble

: kdt1   note C-2 10  rest 10  note G-2 10  rest 10  note A$1 10  rest 10  note F-2 10  rest 10  repeat 4 kdt1
: kdt2   note C-2 10  rest 10  note D$2 10  rest 10  note G-2 10  rest 10  note C-3 10  rest 10  repeat 2 kdt2
: kdt3   note A$1 10  rest 10  note D-2 10  rest 10  note F-2 10  rest 10  note A$2 10  rest 10  repeat 2 kdt3
: kdt4   note C-2 10  rest 10  note G-2 10  rest 10  note A$1 10  rest 10  note F-2 10  rest 10  repeat 4 kdt4
: kdt5   note C-2 10  rest 10  note C-2 10  rest 10  rest 120                                    repeat 2 kdt5
: kdt6   note C-2 10  rest 10  note G-2 10  rest 10  note A$1 10  rest 10  note F-2 10  rest 10  repeat 4 kdt6
: kdt7   note C-3 10  rest 10  note G-2 10  rest 10  note D$2 10  rest 10  note C-2 10  rest 10  repeat 2 kdt7
: kdt8   note A$2 10  rest 10  note F-2 10  rest 10  note D-2 10  rest 10  note A$1 10  rest 10  repeat 2 kdt8
: kdt9   note C-2 10  rest 10  note G-2 10  rest 10  note A$1 10  rest 10  note F-2 10  rest 10  repeat 4 kdt9
: kdt10  note C-2 10  rest 10  note C-2 10  rest 10  rest 120                                    repeat 2 kdt10
         da-capo

: im-too-young-to-vipe



: hurting-plenty



: clowns-arent-funny



: victory-1

  note D-4 4   rest 4      note G$4 4   rest 4      note A$4 4   rest 4
  note E-5 5   note F-5 5  note E-5 5   note F-5 5  note E-5 5   rest 15
  note F-4 4   rest 4      note C-5 4   rest 4      note D-5 4   rest 4
  note F-5 5   note G-5 5  note F-5 5   note G-5 5  note F-5 5   rest 15
  note G-5 10  rest 10     note G-5 12  rest 10     note F-5 14  rest 10
  note G-5 40  rest 10
  stop

: victory-2

  note D-4 10  rest 4  note G$4 4  rest 4  note B-4 20  rest 8
  stop

#####################
# A non-blocking music player
# `play-music` needs to be called again after 'music-delay' timer ticks.

# Input: none
: play-click
  i := long click
  v0 := 5
  audio
  buzzer := v0
  return

# Input: 'unpacked' address of song in v0 and v1
: select-song # and return to position 0
  i := long current-song
  v2 := 0
  save v2
  # Clear any old backup songs
  v0 := 0
  v1 := 0
  i := long current-song-backup
  save v1
  return

# Input: 'unpacked' address of song in v0 and v1
: interject-song # and resume playing afterwards
  v3 := v0
  v4 := v1
  # Check if we're already in an interjected song (can't do two)
  i := long current-song-backup
  load v1
  v0 |= v1
  if v0 != 0 then jump interject-song-leave-backup-untouched
  # Swap current song to backup and new song to current
  i := long current-song
  load v2
  i := long current-song-backup
  save v2
: interject-song-leave-backup-untouched
  v0 := v3
  v1 := v4
  v2 := 0
  i := long current-song
  save v2
  # Force `play-music` to start the new song right away
  music-delay := 1
  return

# Input: none
# Destroys: v0 - v4
: play-music
  # Load and update our position in the song
  i := long music-position
  load v0
  v4 := v0
  v0 += 1
  i := long music-position
  save v0

  # Load the next music instruction
  music-pointer
  load v3

  if v2 == c-note   then jump music-note
  if v2 == c-repeat then jump music-repeat
  if v2 == c-stop   then jump music-stop
  # Else, it's a da capo

: music-da-capo
  v0 := 0
  i := long music-position
  save v0
  return

: music-note
  i := music-smc
  save v1
  0xF0 0x00 # i := long ...
: music-smc
  0 0
  # Play the sound!
  audio
  music-delay := v3
  vf := 255
  buzzer := vf
  return

: music-repeat
  v5 := v0
  v6 := v1
  music-pointer
  if v5 == 0 begin
    # We've done all the repetitions, reset for the next playthrough
    v0 := v6
    save v0
  else
    # Decrease the loop counter
    v0 := v5
    v0 -= 1
    save v0

    # Move the position back as many steps as the instruction dictates
    i := long music-position
    load v0
    v0 -= v3
    i := long music-position
    save v0
  end
  jump play-music

: music-stop
  # Do we have anything left in backup to play?
  i := long current-song-backup
  load v2
  v3 := v0
  v3 |= v1
  if v3 != 0 begin
    i := long current-song
    save v2
    v0 := 0
    v1 := 0
    i := long current-song-backup
    save v1
    music-delay := 1
    return
  else
    # Step back one position so we don't play anything anymore
    i := long music-position
    load v0
    v0 -= 1
    i := long music-position
    save v0
  end
  return

: music-pointer
  i := long current-song
  load v1
  i := music-pointer-smc
  save v1
  0xF0 0x00  # i := long ...
: music-pointer-smc
  0 0
  i += v4
  i += v4
  i += v4
  i += v4
  return

: current-song
  0 0
: music-position
  0
: current-song-backup
  0 0
: music-position-backup
  0

# That's all folks!
